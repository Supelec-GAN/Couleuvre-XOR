<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>56</x>
      <y>528</y>
      <w>264</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>NeuronLayer
--
+ process(VectorXf input) -&gt; VectorXf
+ backprop(VectorXf xnPartialDerivative, float step) -&gt; VectorXf
--

- MatrixXf mPoids
- VectorXf mBiais
- (fun) float -&gt; float mActivationFun

- VectorXf mBufferActivationLevel
- VectorXf mBufferInput
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>232</x>
      <y>296</y>
      <w>224</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>NeuralNetwork
--
+ process(VectorXf inputs)-&gt; VectorXf

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>176</x>
      <y>344</y>
      <w>176</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1..n
m2=1</panel_attributes>
    <additional_attributes>10.0;230.0;10.0;100.0;200.0;100.0;200.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>376</x>
      <y>528</y>
      <w>264</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>Teacher
--
+ backProp(VectorXf input, VectorXf desiredOutput, float step)
--

- (fun) VectorXF -&gt; float mErrorFun
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>296</y>
      <w>176</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>Functions
--
Sert à générer facilement des 
fonctions de seuil ou d'erreur</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>328</x>
      <y>344</y>
      <w>208</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=0..1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0;220.0;100.0;220.0;230.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>336</x>
      <y>72</y>
      <w>512</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>Application
--
+ totalRun(int nbLoops, int nbTeachingsPerLoop, int nbTestsPerLoop) -&gt; void
* runTeach(int nbTeachings) -&gt; void()
* runTest(int nbTests) -&gt; void()
--
- mNetwork
- mTeacher
- mTeachingBatch
- mTestingBatch
- mDataCollector
- mTestCounter</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>328</x>
      <y>208</y>
      <w>216</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;110.0;10.0;70.0;250.0;70.0;250.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>520</x>
      <y>208</y>
      <w>56</w>
      <h>336</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=1</panel_attributes>
    <additional_attributes>50.0;400.0;50.0;70.0;10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>520</x>
      <y>208</y>
      <w>464</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=1</panel_attributes>
    <additional_attributes>560.0;110.0;560.0;70.0;10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>768</x>
      <y>696</y>
      <w>216</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>Struct : StatisticData
--
+ float             mean
+ float             deviation
+ float             confidenceRange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>816</x>
      <y>296</y>
      <w>304</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>StatsCollector
--
+ ErrorCollector&amp; 	     operator[](unsigned int teachIndex);
+ void                       exportData(bool mustProcessData = true);
--
- StatsCollector(const std::string&amp; CSVFileName = "resultat")
- std::vector&lt;ErrorCollector&gt; mErrorStats;
- csvfile                     mCSV;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>872</x>
      <y>432</y>
      <w>88</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=-
m1=0..n
m2=1</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;40.0;90.0;40.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1056</x>
      <y>432</y>
      <w>80</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=1</panel_attributes>
    <additional_attributes>80.0;100.0;80.0;50.0;10.0;50.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1032</x>
      <y>512</y>
      <w>168</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>CSVFile
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>752</x>
      <y>496</y>
      <w>256</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>ErrorCollector
--
+ void            addResult(float result);
+ StatisticData   processData() const;
--
- std::vector&lt;float&gt; mErrors;


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>872</x>
      <y>632</y>
      <w>24</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
</diagram>
