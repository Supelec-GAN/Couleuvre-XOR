<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>256</x>
      <y>680</y>
      <w>264</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>NeuronLayer
--
+ process(VectorXf input) -&gt; VectorXf
+ backprop(VectorXf xnPartialDerivative, float step) -&gt; VectorXf
--

- MatrixXf mPoids
- VectorXf mBiais
- (fun) float -&gt; float mActivationFun

- VectorXf mBufferActivationLevel
- VectorXf mBufferInput
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>432</x>
      <y>448</y>
      <w>224</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>NeuralNetwork
--
+ process(VectorXf inputs)-&gt; VectorXf

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>376</x>
      <y>496</y>
      <w>176</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1..n
m2=1</panel_attributes>
    <additional_attributes>10.0;230.0;10.0;100.0;200.0;100.0;200.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>576</x>
      <y>680</y>
      <w>264</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>Teacher
--
+ backProp(VectorXf input, VectorXf desiredOutput, float step)
--

- (fun) VectorXF -&gt; float mErrorFun
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>200</x>
      <y>448</y>
      <w>176</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>Functions
--
Sert à générer facilement des 
fonctions de seuil ou d'erreur</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>528</x>
      <y>496</y>
      <w>208</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=0..1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0;220.0;100.0;220.0;230.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>536</x>
      <y>184</y>
      <w>512</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>Application
--
_Attributes :_
- mNetwork
- mTeacher
- mTeachingBatch
- mTestingBatch
- mDataCollector
- mTestCounter
--
_Methods :_
+ totalRun(int nbLoops, int nbTeachingsPerLoop, int nbTestsPerLoop) -&gt; void
* runTeach(int nbTeachings) -&gt; void()
* runTest(int nbTests) -&gt; void()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>528</x>
      <y>352</y>
      <w>216</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;120.0;10.0;80.0;250.0;80.0;250.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>720</x>
      <y>352</y>
      <w>56</w>
      <h>344</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=1</panel_attributes>
    <additional_attributes>50.0;410.0;50.0;80.0;10.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>720</x>
      <y>352</y>
      <w>344</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=1</panel_attributes>
    <additional_attributes>410.0;140.0;410.0;80.0;10.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1040</x>
      <y>616</y>
      <w>40</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=-
m1=0..n
m2=1</panel_attributes>
    <additional_attributes>10.0;120.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>904</x>
      <y>464</y>
      <w>304</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>DataCollector
--
_Attributes :_
- vector&lt;pair&lt;string, vector&lt;float&gt; &gt; mDataVector
- csvfile file
--
_Methods :_
+ addRawData(string key, DataSet)
+ addData(DataSet dataSet) [[deprecated]]
+ addProcessedData(DataSet dataSet)
+ operator[](string key)
+ addDataType(string type)
+ exportData()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>920</x>
      <y>712</y>
      <w>256</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>DataSet
--
_Attribute :_
- vector&lt;float&gt;        mRawData
- Statistics::Data     mMean
- float                      mMedian
- int                         mSample
- bool                      isProcessed
--
_Methods :_
+ DataSet(vector&lt;float&gt; dataVect)
+ addData(float data, bool process)
+ addRawData(vector&lt;float&gt; dataVect)
- processData()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1280</x>
      <y>712</y>
      <w>216</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>Struct : Data
--
_Attributes :_
+ float             mean
+ float             deviation
+ float             confRangeMean
+ float             confRangeDeviation</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1168</x>
      <y>752</y>
      <w>128</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;140.0;10.0</additional_attributes>
  </element>
</diagram>
